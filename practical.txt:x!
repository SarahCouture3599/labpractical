1.	Paste the command(s) below that you used to get the practical into your home directory (2 points)

Cd //tmp 
cp REAL_PRACTICAL.md /home/users/smc1079/stuff

#### 2. Make a new directory labeled `practical` in your home directory, and another directory labeled `sequences` within `practical`. Do this in one command. (2 points)

Cd ~ | mkdir practical | mkdir sequences | mv sequences /home/users/smc1079/practical

#### 3. Move into the `sequences` directory. (1 point)

Cd ~
Cd practical
Cd sequences 

#### 4. Provide the absolute path to the `sequences` directory, along with the command used to generate it. (2 point)

Pwd
 /home/users/smc1079/practical/sequences 

#### 5. Copy all fasta files from within the `/tmp/practical` to your `sequences` directory while leaving all other file types behind. Do this in one command. (2 points)

cd //tmp/practical | cp "GCF_027887145.1_bAmmCau1.pri_genomic.fasta" "GCF_028018845.1_bMelGeo1.pri_genomic.fasta" "GCF_027579445.1_bAmmNel1.pri_genomic.fasta" /home/users/smc1079/practical/sequences

#### 6. Copy everything from `/tmp/practical` into your `practical` directory (including the fasta files). Delete just the fasta files while keeping everything else. Do this in just 2 commands, one for each step. (2 points)

Cd //tmp/practical | cp "animals.txt" "fruit.txt" "vegetables.txt" "GCF_027887145.1_bAmmCau1.pri_genomic.fasta" "GCF_028018845.1_bMelGeo1.pri_genomic.fasta" "GCF_027579445.1_bAmmNel1.pri_genomic.fasta" /home/users/smc1079/practical

rm *.fasta

#### 7. Concatenate the files within `practical` into one file called `items.txt`. (2 points)
mv -v ~/practical/* ~/items.txt/

#### 8. Create your own file titled `colors.txt`. Add 3 colors within the file in the same format as the other text files. Give the command or describe your process of adding to the file. (3 points)

Touch colors.txt 
Nano colors.txt
Added blue, green, and violet 
:x! to save and exit

#### 9. Add the items in your `colors.txt` to the end of `items.txt`. (2 points)

echo "blue" "green" “violet”  >> items.txt

#### 10. How many total items are within `items.txt`? Give the count and command used to generate the count. (2 points)

Ls -l 
5 due to edited colored txt file 

### Part 2: Piped commands (20 points total)
__All commands used here will involve piping of some sort__

#### 11. Provide a list of unique items within the `items.txt` file. Also provide the command used to generate the list. (5 points)

Uniq | ls -a1 

#### 12. In the `sequences` directory, count how many sequences are within all fasta files. Provide the command and count below. (5 points)

grep -A1 "NC" *.fasta | wc -l
338

#### 13. Create a file named `accession_numbers.txt` that stores the sequence accession number from all headers of all fasta files. Please only store the sequence accession number at the beginning, not the descriptions afterward. Provide the command used to generate the file. (5 points)
- For example, a header of `>NC_080634.1 Ammospiza nelsoni isolate bAmmNel1 chromosome 2, bAmmNel1.pri, whole genome shotgun sequence`, should be stored as `>NC_080634.1`.

grep -o “>NC”  >> accession.numbers.txt
#### 14. List the first 8 commands within `/bin` that contain two repeated p's in a row (`pp`) within their name. Provide the list and the command used to generate the list below (5 points)

ls *pp* | head -n8
411toppm
apport-bug
apport-cli
apport-collect
apport-unpack
appres
bmptoppm
check-language-support

### Part 3: Command Comprehension (10 points total)
__You will be given a command. Please describe what the command will do. You do not have to run these commands yourself, but if it is helpful to you, you can try to replicate them in your own terminal.__

#### 15. `seq 1 10` Provide a short description, and how you found it. (HINT: You have not seen this command before. How would you find out what it does using your terminal?) (2.5 points)

man seq 1 10 
seq – print a sequence of numbers, prints numbers from first to last in steps of increment. 

#### 16. `ls -lh /home | grep "unh"` (2.5 points)

Searches home directory for anything containing the letters “unh” and lists them out in human readable sizes along with user, word count, date and time. 

#### 17. `grep "@SRR" *.fastq | sort | uniq | wc -l` (2.5 points)

Will search all fastq files for anything starting with @SRR and will sort lines, remove duplicates, and will list out the word count. 

#### 18. `cat file.something | tail -n 5 | head -n 1` (2.5 points)

Concatenate the last 5 sequences and first header/sequence of file.something 

